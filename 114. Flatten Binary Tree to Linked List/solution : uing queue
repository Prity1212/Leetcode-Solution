/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
import java.util.*;
class Solution {
    public void addElementInQueue(Queue q, TreeNode root){
        if(root == null){
            return;
        }
        q.add(root);
        addElementInQueue(q,root.left);
        addElementInQueue(q,root.right);
        
    } 
    public void flatten(TreeNode root) {
        if(root == null ){
            return;
        }
        if (root.left == null && root.right == null){
            return;
        }
        Queue<TreeNode> q = new LinkedList<>();
       addElementInQueue(q,root);
        
        root = q.peek();
        //TreeNode temp = root;
        while(!q.isEmpty()){
            q.remove();
            root.left = null;
            root.right = q.peek();
            root = q.peek();
        }
        
        
        
    }
}
